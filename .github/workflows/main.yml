on:
  push:
    branches-ignore:
      - website
      - gh-pages
  pull_request:
    branches-ignore:
      - website
      - gh-pages

jobs:
  BuildUbuntu:
    name: Build on Ubuntu with clang (${{ matrix.configuration }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
      - name: Clone Tree
        uses: actions/checkout@v3

      - name: Build container image
        run: |
          docker build -t halo .

      - name: Build
        run: |
          docker run --rm  -u $(id -u):$(id -g) -v $PWD:/work -w /work halo /bin/bash -c "cmake -Bbuild -S. -DCMAKE_TOOLCHAIN_FILE=toolchains/llvm.cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }} && cmake --build build --target halo"

  BuildWindows:
    name: Build on Windows with MSVC (${{ matrix.configuration }})
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
      - name: Clone Tree
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - name: Build
        run: |
          python -m pip install --user -r requirements.txt
          cmake -AWin32 -Bbuild -S.
          cmake --build build --target halo --config ${{ matrix.configuration }}

  BuildMacos:
    name: Build on macOS with clang (${{ matrix.configuration }})
    runs-on: macos-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    steps:
      - name: Clone Tree
        uses: actions/checkout@v3

      - name: Build
        run: |
          brew install llvm
          python3 -m pip install --user -r requirements.txt
          export PATH="/opt/homebrew/opt/llvm/bin:/usr/local/opt/llvm/bin:$PATH"
          cmake -Bbuild -S. -DCMAKE_TOOLCHAIN_FILE=toolchains/llvm.cmake -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}
          cmake --build build --target halo
